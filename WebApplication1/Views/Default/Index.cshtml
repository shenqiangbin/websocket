
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript" src="~/Scripts/swfobject.js"></script>
<script type="text/javascript" src="~/Scripts/web_socket.js"></script>

<h2>Index</h2>
<div id="content"></div>
<input type="text" id="msg" />
<input type="button" id="btnSend" value="send" />

@*
    兼容IE8的方法：
    参照：https://github.com/gimite/web-socket-js
    方法：
    拷贝如下：
    <script type="text/javascript" src="~/Scripts/swfobject.js"></script>
    <script type="text/javascript" src="~/Scripts/web_socket.js"></script>

    将Scripts下面的swfobject.js、web_socket.js、WebSocketMain.swf拷贝走，

    拷贝脚本：
    WEB_SOCKET_DEBUG = true;
    WEB_SOCKET_SWF_LOCATION = "/Scripts/WebSocketMain.swf";

    其它的脚本还调用原来的Socket就可以。

    如果在IE8下，Falsh握手不成功的话，部署Server控制台程序
    
    参考文章：
    [教程] Flash Socket通信的安全策略问题 843端口
    http://blog.csdn.net/wclin88/article/details/7291607
*@


@section footer{
    <script>
        WEB_SOCKET_DEBUG = true;
        WEB_SOCKET_SWF_LOCATION = "/Scripts/WebSocketMain.swf";

        var socketClient = {
            socket: '',
            init: function () {
                var url = 'ws://' + window.location.hostname + ":" + window.location.port;
                url += "/api/ws";
                this.socket = new WebSocket(url);

                this.socket.onopen = function (event) {
                    console.log("socket open");

                    socketClient.socket.send("i'm listening");

                    socketClient.socket.onmessage = function (event) {
                        console.log('received a message', event);
                        var data = event.data;
                        output.print(data);
                    };

                    socketClient.socket.onclose = function (event) {
                        console.log('socket closed', event);
                    };

                    socketClient.socket.onerror = function (event) {
                        console.log(JSON.stringify(event));
                    }
                };
            },
            close: function () {
                socketClient.socket.close();
            }
        }

        var output = {
            print: function (data) {
                var content = $("#content");
                content.append($("<div>" + data + "</div>"));
            }
        }

        var testClient = {
            print: function () {
                output.print("abc");
            }
        }

        socketClient.init();      

        $("#btnSend").click(function () {
            if (socketClient.socket.readyState == WebSocket.OPEN) {
                var msg = $("#msg").val();
                socketClient.socket.send(msg);
            } else {
                alert("连接已关闭");
            }
        });

    </script>
}

